{"version":3,"file":"static/webpack/static/development/pages/index.js.41a49d52e1726f807a3b.hot-update.js","sources":["webpack:///./components/Table.js"],"sourcesContent":["import { observer } from \"mobx-react\";\nimport { reaction, decorate, computed } from \"mobx\";\nimport {\n  List,\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache\n} from \"react-virtualized\";\nimport ResizeHandle from \"./ResizeHandle\";\nimport TableRow from \"./TableRow\";\nimport randomMC from \"random-material-color\";\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._cache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 25,\n      keyMapper: rowIndex => {\n        const track = this.props.playlistStore.filteredTracks[rowIndex].track;\n        return track.uri;\n      }\n    });\n\n    reaction(\n      () =>\n        this.props.uiStore.state.trackColWidth +\n        this.props.uiStore.state.artistColWidth +\n        this.props.uiStore.mainPanelWidth,\n      () => {\n        this._cache.clearAll();\n      }\n    );\n\n    // reaction(\n    //   () => this.props.playlistStore.filteredTracks,\n    //   () => {\n    //     console.log(\"filteredtracks reaction\");\n    //     // this._cache.clearAll();\n    //     this.listRef && this.listRef.forceUpdate();\n    //   }\n    // );\n\n    reaction(\n      () => this.props.playlistStore.searchState.query,\n      () => {\n        console.log(\"query reaction\");\n        this._cache.clearAll();\n        this.listRef && this.listRef.forceUpdate();\n      }\n    );\n  }\n  render() {\n    console.log(\"render\");\n    if (this.props.playlistStore.searchState.numFetches) {\n      return (\n        <div>Loading...{this.props.playlistStore.searchState.numFetches}</div>\n      );\n    }\n\n    const filteredList = this.props.playlistStore.filteredTracks;\n\n    const tagsByTrack = this.props.playlistStore.tagsByTrack;\n    const playlistsById = this.props.playlistStore.playlistsById;\n\n    return (\n      <React.Fragment>\n        <input\n          value={this.props.playlistStore.searchState.query}\n          onChange={e => {\n            this.props.playlistStore.searchState.query = e.target.value;\n          }}\n        />\n        <div style={{ display: \"flex\" }}>\n          <div\n            style={{\n              position: \"relative\",\n              width: this.props.uiStore.state.trackColWidth\n            }}\n          >\n            Title\n            <ResizeHandle\n              onResize={delta =>\n                (this.props.uiStore.state.trackColWidth += delta)\n              }\n              style={{\n                position: \"absolute\",\n                right: 0,\n                width: 5,\n                top: 0,\n                height: \"100%\",\n                background: \"gray\"\n              }}\n            />\n          </div>\n          <div\n            style={{\n              position: \"relative\",\n              width: this.props.uiStore.state.artistColWidth\n            }}\n          >\n            Artist\n            <ResizeHandle\n              onResize={delta =>\n                (this.props.uiStore.state.artistColWidth += delta)\n              }\n              style={{\n                position: \"absolute\",\n                right: 0,\n                width: 5,\n                top: 0,\n                height: \"100%\",\n                background: \"gray\"\n              }}\n            />\n          </div>\n          <div>Tags</div>\n        </div>\n        <List\n          ref={ref => (this.listRef = ref)}\n          width={this.props.uiStore.mainPanelWidth}\n          height={this.props.uiStore.state.windowHeight - 100}\n          deferredMeasurementCache={this._cache}\n          rowCount={filteredList.length}\n          rowHeight={this._cache.rowHeight}\n          rowRenderer={({ key, index, parent, style }) => {\n            const t = filteredList[index];\n            const identifier = t.track.uri;\n            const tags = tagsByTrack[identifier].map(\n              playlistId => this.tagSelectOptionsMap[playlistId]\n            );\n\n            return (\n              <div key={t.track.uri} style={style}>\n                <TableRow\n                  style={style}\n                  index={index}\n                  parent={parent}\n                  cellMeasurerCache={this._cache}\n                  track={t.track}\n                  tags={tags}\n                  tagOptions={this.tagSelectOptions}\n                  trackColWidth={this.props.uiStore.state.trackColWidth}\n                  artistColWidth={this.props.uiStore.state.artistColWidth}\n                  addTag={this.props.playlistStore.addTag}\n                  removeTag={this.props.playlistStore.removeTag}\n                />\n              </div>\n            );\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n\n  get tagSelectOptions() {\n    return _.map(this.playlistStore.playlistsById, (p, id) => ({\n      label: p.name,\n      value: id,\n      color: randomMC.getColor({ text: id })\n    }));\n  }\n\n  get tagSelectOptionsMap() {\n    return _.keyBy(this.tagSelectOptions, \"value\");\n  }\n}\ndecorate(Table, {\n  tagSelectOptions: computed,\n  tagSelectOptionsMap: computed\n});\n\nexport default observer(Table);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAAA;AAKA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AArCA;AAuCA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCA;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAKA;;;AAEA;AACA;AACA;;;;AA1JA;AACA;AA2JA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}