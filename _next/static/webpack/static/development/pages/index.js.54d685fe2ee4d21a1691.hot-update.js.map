{"version":3,"file":"static/webpack/static/development/pages/index.js.54d685fe2ee4d21a1691.hot-update.js","sources":["webpack:///./components/MainPane.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport xs from \"xstream\";\nimport randomMC from \"random-material-color\";\nimport _ from \"lodash\";\n\nimport { componentFromStream } from \"../util/recompose\";\nimport * as playlist from \"../data/PlaylistStore\";\nimport * as ui from \"../data/UIStore\";\nimport theme from \"../theme\";\n\n// import Table from \"./VirtualizedTable\";\nimport Table from \"./BasicTable\";\nimport SearchBar from \"./SearchBar\";\nimport TableHeader from \"./TableHeader\";\n\nexport default componentFromStream(props$ => {\n  const tagSelectOptions$ = playlist.playlists$\n    .map(playlists =>\n      playlists.map(p => ({\n        label: p.name,\n        value: p.id,\n        color: randomMC.getColor({ text: p.id }),\n      })),\n    )\n    .remember();\n  const tagSelectOptionsMap$ = tagSelectOptions$\n    .map(options => _.keyBy(options, \"value\"))\n    .remember();\n\n  return xs\n    .combine(\n      playlist.filteredTracks$,\n      playlist.tagsByTrack$,\n      playlist.tracksById$,\n      tagSelectOptions$,\n      tagSelectOptionsMap$,\n      props$,\n    )\n    .map(\n      ([\n        filteredTracks,\n        tagsByTrack,\n        tracksById,\n        tagSelectOptions,\n        tagSelectOptionsMap,\n        props,\n      ]) => (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            background: theme.colors.backgroundLight,\n            ...props.style,\n          }}\n        >\n          <SearchBar />\n          {/* <TableHeader /> */}\n          <Table\n            filteredTracks={filteredTracks}\n            tagsByTrack={tagsByTrack}\n            tracksById={tracksById}\n            tagSelectOptions={tagSelectOptions}\n            tagSelectOptionsMap={tagSelectOptionsMap}\n            addTag={(trackId, playlistId) =>\n              playlist.addTag({ trackId, playlistId })\n            }\n            removeTag={(trackId, playlistId) =>\n              playlist.removeTag({ trackId, playlistId })\n            }\n            createAndAddTag={(trackId, playlistName) =>\n              playlist.createAndAddTag({ trackId, playlistName })\n            }\n          />\n        </div>\n      ),\n    );\n});\n\n/* <div\n          style={{\n            ...this.props.style,\n          }}\n        > */\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AADA;AAQA;AACA;AAAA;AAGA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AASA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AADA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAqCA;AAEA;;;;;;;;A","sourceRoot":""}