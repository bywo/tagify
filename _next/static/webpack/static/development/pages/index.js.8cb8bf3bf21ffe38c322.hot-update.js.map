{"version":3,"file":"static/webpack/static/development/pages/index.js.8cb8bf3bf21ffe38c322.hot-update.js","sources":["webpack:///./components/App.js","webpack:///./components/BasicTable.js","webpack:///./components/MainPane.js","webpack:///./components/TableRow.js"],"sourcesContent":["import { observer } from \"mobx-react\";\nimport PlaylistStore from \"../data/PlaylistStore\";\nimport CollectionListItem from \"./CollectionListItem\";\nimport UIStore from \"../data/UIStore\";\nimport ResizeHandle from \"./ResizeHandle\";\nimport MainPane from \"./MainPane\";\n\nexport default observer(\n  class App extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.playlistStore = new PlaylistStore();\n      window.playlistStore = this.playlistStore;\n\n      this.uiStore = new UIStore();\n      window.uiStore = this.uiStore;\n    }\n\n    render() {\n      return (\n        <div\n          style={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}\n        >\n          <div>header</div>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"stretch\",\n              flexGrow: 1,\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"stretch\",\n                width: this.uiStore.state.sidebarWidth,\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  flexGrow: \"1\",\n                  overflow: \"auto\",\n                }}\n              >\n                {[\n                  { id: \"all\", name: \"All songs\" },\n                  ...this.playlistStore.playlists,\n                ].map(p => {\n                  return (\n                    <CollectionListItem\n                      key={p.id}\n                      selected={\n                        p.id ===\n                        this.playlistStore.searchState.selectedPlaylistId\n                      }\n                      onClick={() =>\n                        (this.playlistStore.searchState.selectedPlaylistId =\n                          p.id)\n                      }\n                      name={p.name}\n                    />\n                  );\n                })}\n              </div>\n              <ResizeHandle\n                onResize={delta => {\n                  this.uiStore.state.sidebarWidth =\n                    this.uiStore.state.sidebarWidth + delta;\n                }}\n                style={{\n                  position: \"absolute\",\n                  right: -5,\n                  width: 5,\n                  top: 0,\n                  height: \"100vh\",\n                  background: \"gray\",\n                }}\n              />\n            </div>\n            <div\n              style={{\n                overflow: \"auto\",\n                paddingLeft: this.uiStore.state.panelGutter,\n              }}\n            >\n              <MainPane\n                uiStore={this.uiStore}\n                playlistStore={this.playlistStore}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  },\n);\n","import { observer } from \"mobx-react\";\nimport { reaction } from \"mobx\";\nimport { List, CellMeasurerCache } from \"react-virtualized\";\nimport TableRow from \"./TableRow\";\n\nclass BasicTable extends React.Component {\n  render() {\n    const filteredList = this.props.playlistStore.filteredTracks;\n\n    const tagsByTrack = this.props.playlistStore.tagsByTrack;\n\n    return (\n      <React.Fragment>\n        {filteredList.map(t => {\n          const identifier = t.track.uri;\n          const tags = tagsByTrack[identifier].map(\n            playlistId => this.props.tagSelectOptionsMap[playlistId],\n          );\n\n          return (\n            <TableRow\n              key={t.track.uri}\n              track={t.track}\n              tags={tags}\n              tagOptions={this.props.tagSelectOptions}\n              trackColWidth={this.props.uiStore.state.trackColWidth}\n              artistColWidth={this.props.uiStore.state.artistColWidth}\n              addTag={this.props.playlistStore.addTag}\n              removeTag={this.props.playlistStore.removeTag}\n              createTagWithTrack={this.props.playlistStore.createTagWithTrack}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default observer(BasicTable);\n","// import Table from \"./VirtualizedTable\";\nimport Table from \"./BasicTable\";\nimport { observer } from \"mobx-react\";\nimport { decorate } from \"mobx\";\n\nclass MainPane extends React.Component {\n  render() {\n    const { uiStore, playlistStore } = this.props;\n    return (\n      <React.Fragment>\n        <input\n          value={playlistStore.searchState.query}\n          onChange={e => {\n            playlistStore.searchState.query = e.target.value;\n          }}\n        />\n        <div style={{ display: \"flex\" }}>\n          <div\n            style={{\n              position: \"relative\",\n              width: uiStore.state.trackColWidth,\n            }}\n          >\n            Title\n            <ResizeHandle\n              onResize={delta => (uiStore.state.trackColWidth += delta)}\n              style={{\n                position: \"absolute\",\n                right: 0,\n                width: 5,\n                top: 0,\n                height: \"100%\",\n                background: \"gray\",\n              }}\n            />\n          </div>\n          <div\n            style={{\n              position: \"relative\",\n              width: uiStore.state.artistColWidth,\n            }}\n          >\n            Artist\n            <ResizeHandle\n              onResize={delta => (uiStore.state.artistColWidth += delta)}\n              style={{\n                position: \"absolute\",\n                right: 0,\n                width: 5,\n                top: 0,\n                height: \"100%\",\n                background: \"gray\",\n              }}\n            />\n          </div>\n          <div>Tags</div>\n        </div>\n        {playlistStore.searchState.numFetches ? (\n          <div>Loading...{this.props.playlistStore.searchState.numFetches}</div>\n        ) : (\n          <Table\n            uiStore={uiStore}\n            playlistStore={playlistStore}\n            tagSelectOptions={this.tagSelectOptions}\n            tagSelectOptionsMap={this.tagSelectOptionsMap}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  get tagSelectOptions() {\n    return _.map(this.props.playlistStore.playlistsById, (p, id) => ({\n      label: p.name,\n      value: id,\n      color: randomMC.getColor({ text: id }),\n    }));\n  }\n\n  get tagSelectOptionsMap() {\n    return _.keyBy(this.tagSelectOptions, \"value\");\n  }\n}\n\ndecorate(MainPane, {\n  tagSelectOptions: computed,\n  tagSelectOptionsMap: computed,\n});\n\nexport default observer(MainPane);\n","import CreatableSelect from \"react-select/lib/Creatable\";\n\nexport default class TableRow extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (this.props.track.uri !== nextProps.track.uri) {\n      return true;\n    }\n\n    if (this.props.tags.length !== nextProps.tags.length) {\n      return true;\n    }\n\n    if (this.props.trackColWidth !== nextProps.trackColWidth) {\n      return true;\n    }\n\n    if (this.props.artistColWidth !== nextProps.artistColWidth) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          borderBottom: \"solid 1px gray\",\n          alignItems: \"baseline\",\n        }}\n      >\n        <div\n          style={{\n            flexShrink: \"0\",\n            width: this.props.trackColWidth,\n            padding: \"4px\",\n          }}\n        >\n          {this.props.track.name}\n        </div>\n        <div\n          style={{\n            flexShrink: \"0\",\n            width: this.props.artistColWidth,\n            padding: \"4px\",\n          }}\n        >\n          {this.props.track.artists.map((a, index) => (\n            <span key={a.id}>\n              {a.name}\n              {index !== this.props.track.artists.length - 1 ? \", \" : null}\n            </span>\n          ))}\n        </div>\n        <div\n          style={{\n            flexGrow: \"1\",\n            padding: \"4px\",\n          }}\n        >\n          <CreatableSelect\n            isMulti\n            isSearchable\n            options={this.props.tagOptions}\n            value={this.props.tags}\n            onChange={selectedOptions => {\n              this.props.cellMeasurerCache.clear(this.props.index);\n              const added = _.difference(selectedOptions, this.props.tags);\n              const deleted = _.difference(this.props.tags, selectedOptions);\n              added\n                .filter(option => option.__isNew__)\n                .forEach(({ label }) => {\n                  this.props.createTagWithTrack(this.props.track.uri, label);\n                });\n              added\n                .filter(option => !option.__isNew__)\n                .forEach(({ value: playlistId }) => {\n                  this.props.addTag(this.props.track.uri, playlistId);\n                });\n              deleted.forEach(({ value: playlistId }) => {\n                this.props.removeTag(this.props.track.uri, playlistId);\n              });\n            }}\n            styles={{\n              multiValue: (styles, { data }) => ({\n                ...styles,\n                backgroundColor: data.color,\n              }),\n              multiValueLabel: styles => ({\n                ...styles,\n                color: \"white\",\n              }),\n              multiValueRemove: styles => ({\n                ...styles,\n                color: \"white\",\n              }),\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","sourceRoot":""}