{"version":3,"file":"static/webpack/static/development/pages/index.js.c76e96b497f3d637b337.hot-update.js","sources":["webpack:///./components/MainPane.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { observer } from \"mobx-react\";\nimport { decorate, computed } from \"mobx\";\nimport randomMC from \"random-material-color\";\n\n// import Table from \"./VirtualizedTable\";\nimport Table from \"./BasicTable\";\n\nclass MainPane extends React.Component {\n  static propTypes = {\n    playlistStore: PropTypes.shape({}).isRequired,\n    uiStore: PropTypes.shape({}).isRequired,\n  };\n\n  get tagSelectOptions() {\n    const { playlistStore } = this.props;\n    return _.map(playlistStore.playlistsById, (p, id) => ({\n      label: p.name,\n      value: id,\n      color: randomMC.getColor({ text: id }),\n    }));\n  }\n\n  get tagSelectOptionsMap() {\n    return _.keyBy(this.tagSelectOptions, \"value\");\n  }\n\n  render() {\n    const { uiStore, playlistStore } = this.props;\n    return (\n      <React.Fragment>\n        <input\n          value={playlistStore.searchState.query}\n          onChange={e => {\n            playlistStore.searchState.query = e.target.value;\n          }}\n        />\n        <div style={{ display: \"flex\" }}>\n          <div\n            style={{\n              position: \"relative\",\n              width: uiStore.state.trackColWidth,\n            }}\n          >\n            Title\n            <ResizeHandle\n              onResize={delta => (uiStore.state.trackColWidth += delta)}\n              style={{\n                position: \"absolute\",\n                right: 0,\n                width: 5,\n                top: 0,\n                height: \"100%\",\n                background: \"gray\",\n              }}\n            />\n          </div>\n          <div\n            style={{\n              position: \"relative\",\n              width: uiStore.state.artistColWidth,\n            }}\n          >\n            Artist\n            <ResizeHandle\n              onResize={delta => (uiStore.state.artistColWidth += delta)}\n              style={{\n                position: \"absolute\",\n                right: 0,\n                width: 5,\n                top: 0,\n                height: \"100%\",\n                background: \"gray\",\n              }}\n            />\n          </div>\n          <div>Tags</div>\n        </div>\n        {playlistStore.searchState.numFetches ? (\n          <div>\n            Loading...\n            {this.props.playlistStore.searchState.numFetches}\n          </div>\n        ) : (\n          <Table\n            uiStore={uiStore}\n            playlistStore={playlistStore}\n            tagSelectOptions={this.tagSelectOptions}\n            tagSelectOptionsMap={this.tagSelectOptionsMap}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\ndecorate(MainPane, {\n  tagSelectOptions: computed,\n  tagSelectOptionsMap: computed,\n});\n\nexport default observer(MainPane);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AAmBA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;AA/EA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAKA;;;AAEA;AACA;AACA;;;;AAjBA;AACA;AADA;AAEA;AACA;AAFA;AACA;AAsFA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}