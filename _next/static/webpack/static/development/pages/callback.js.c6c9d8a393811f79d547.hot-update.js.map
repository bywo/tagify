{"version":3,"file":"static/webpack/static/development/pages/callback.js.c6c9d8a393811f79d547.hot-update.js","sources":["webpack:///./data/UserStore.js"],"sourcesContent":["import xs from \"xstream\";\nimport dropRepeats from \"xstream/extra/dropRepeats\";\nimport db from \"./db\";\nimport { createEventHandler } from \"../util/recompose\";\n\nconst tokenFromDb$ = xs.fromPromise(db.misc.get(\"token\"));\ntokenFromDb$.addListener({\n  next(token) {\n    console.log(\"token from db\", token);\n  },\n});\n\nconst { handler: onToken, stream: tokenSets$ } = createEventHandler();\nexport { onToken };\ntokenSets$.addListener({\n  next(token) {\n    db.misc.put(token, \"token\");\n  },\n});\n\nexport const token$ = xs\n  .combine(tokenFromDb$, tokenSets$.startWith(undefined))\n  .map(([fromDb, fromSet]) => (fromSet !== undefined ? fromSet : fromDb))\n  .compose(dropRepeats())\n  .startWith(undefined);\n\n// TODO: Subject that works when we subscribe late\nexport const fetch$ = token$\n  .filter(token => token != null)\n  .map(token => {\n    async function f(url, options = {}) {\n      options.headers = options.headers || {};\n      options.headers.Authorization = `Bearer ${token}`;\n      const resp = await fetch(url, options);\n      if (resp.status === 429) {\n        const retryAfter = resp.headers.get(\"retry-after\") || \"1\";\n        console.log(\"rate limited, retrying in\", retryAfter);\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve(f(url, options));\n          }, parseInt(retryAfter, 10) * 1000);\n        });\n      }\n      if (resp.status === 401) {\n        // bad token\n        tokenSets$.shamefullySendNext(null);\n      }\n      return resp;\n    }\n\n    return f;\n  })\n  .remember();\n\nfetch$.addListener({\n  next(f) {\n    console.log(\"new fetch!\", f);\n  },\n});\n\nexport const user$ = fetch$\n  .filter(f => !!f)\n  .map(async fetch => {\n    const resp = await fetch(\"https://api.spotify.com/v1/me\");\n    const data = await resp.json();\n    return data;\n  })\n  .map(xs.fromPromise)\n  .flatten()\n  .remember();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAZA;AAaA;AACA;AACA;AACA;AACA;AAjBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AAoBA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}